
#include "../libft.h"
#include <stdio.h>

int	main(void)
{
	t_list	*new;
	int		num;
	
	write(1, "\n------------------ FT_LSTNEW ------------------\n\n", 50);

	new = ft_lstnew("test", 5);
	printf("content: %s\n", new->content);
	printf("content size: %zu\n", new->content_size);
	free(new);

	t_list	*new2 = ft_lstnew("\0", 5);
	printf("content: %s\n", new2->content);
	printf("content size: %zu\n", new2->content_size);
	free(new2);

	t_list	*new3 = ft_lstnew("test", 0);
	printf("content: %s\n", new3->content);
	printf("content size: %zu\n", new3->content_size);
	free(new3);

	num = 1234;
	t_list	*new4 = ft_lstnew(&num, sizeof(num));
	printf("content: %d\n", *(int *)new4->content);
	printf("content size: %zu\n", new4->content_size);
	free(new4);

	t_list	*new5 = ft_lstnew((void *)NULL, 5);
	printf("content: %s\n", new5->content);
	printf("content size: %zu\n", new5->content_size);
	free(new5);

	t_list	*new6 = ft_lstnew("1234", 5);
	printf("content: %s\n", new6->content);
	printf("content size: %zu\n", new6->content_size);
	free(new6);

	t_list	*new7 = ft_lstnew("12345", 6);
	printf("content: %s\n", new7->content);
	printf("content size: %zu\n", new7->content_size);
	free(new7);

	t_list	*new8 = ft_lstnew("123456", 7);
	printf("content: %s\n", new8->content);
	printf("content size: %zu\n", new8->content_size);
	free(new8);

	char *data = "hello, i'm a data";
    t_list	*new9 = ft_lstnew(data, strlen(data) + 1);
	printf("content: %s\n", new9->content);
	printf("content size: %zu\n", new9->content_size);
	printf("strcmp: %d\n", strcmp(data, (char *)new9->content));
	free(new9);

	t_list	*new10 = ft_lstnew(((void *)0), 0);
	printf("content: %s\n", new10->content);
	printf("content size: %zu\n", new10->content_size);
	//printf("strcmp: %d\n", strcmp(data, (char *)new->content));
	free(new10);


	return (0);
}